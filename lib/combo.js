// Generated by CoffeeScript 1.6.3
(function() {
  var combo, fileHelper, fs, realpath, sysConfig;

  fs = require('fs');

  sysConfig = require('../config/sysConfig');

  fileHelper = require('./file');

  realpath = require('./realpath');

  combo = {
    js: function(opts, fileList) {
      var codeArr, codes, i, minCode, srcArr, srcPath, srcStr, _i, _len;
      codes = opts.codes;
      srcPath = codes.match(sysConfig.SCRIPT_FILE_PATH);
      srcPath = realpath("" + opts.folder + "/" + srcPath[2]);
      codes = codes.replace(/\s/g, '');
      codes = codes.replace(/document\.write/g, '\ndocument.write');
      srcStr = codes.replace(sysConfig.COMBINE_SCRIPT_PATH, '|$1');
      srcArr = srcStr.split('|');
      srcArr.shift();
      codeArr = [];
      for (_i = 0, _len = srcArr.length; _i < _len; _i++) {
        i = srcArr[_i];
        minCode = fileList["" + srcPath + i];
        codeArr.push(minCode);
      }
      return codeArr.join('');
    },
    css: function(opts, fileList) {
      var codeArr, codes, cur, i, minCode, srcArr, srcStr, _i, _len;
      codes = opts.codes;
      srcStr = codes.replace(sysConfig.COMBINE_CSS_PATH, '$2|');
      srcArr = srcStr.split('|');
      srcArr.pop();
      codeArr = [];
      for (_i = 0, _len = srcArr.length; _i < _len; _i++) {
        i = srcArr[_i];
        i = i.replace(/\r\n/g, '');
        cur = realpath("" + opts.folder + "/" + i);
        minCode = fileList[cur];
        codeArr.push(minCode);
      }
      return codeArr.join('');
    }
  };

  module.exports = function(opts, fileList) {
    var codes, type;
    type = opts.type;
    if (type === 'js' || type === 'css') {
      codes = combo[type](opts, fileList);
      return fileHelper.writeFile("" + opts.folder + "/" + opts.name, codes);
    }
  };

}).call(this);
