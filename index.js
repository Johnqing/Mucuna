// Generated by CoffeeScript 1.6.3
(function() {
  var base, compress, errorLogs, fileProcess, filesCode, fs, path, setUserSets, usrConfig;

  fs = require('fs');

  path = require('path');

  fileProcess = require('./lib/fileProcess');

  compress = require('./lib/compress');

  base = {
    cwd: './',
    cfg: 'config.js'
  };

  errorLogs = {
    error: 0,
    warning: 0
  };

  usrConfig = null;

  filesCode = {};

  setUserSets = function(path) {
    var data;
    data = fs.readFileSync(path, 'utf-8');
    usrConfig = JSON.parse(data);
  };

  exports.compile = function(cwd, file) {
    var filePath, files, output;
    base.cwd = cwd || cwd.replace('\\', '/');
    base.cfg = file || base.cfg;
    setUserSets("" + base.cwd + "/" + base.cfg);
    filePath = "" + base.cwd + "/" + usrConfig.static_path;
    output = "" + base.cwd + "/output/" + usrConfig.static_path;
    files = fileProcess.getAllFiles(filePath);
    fileProcess.mkdirSync(output);
    files.forEach(function(item) {
      var fNum, fileBaseName, fileType, folder, itemArr, newFolders, oldPath;
      itemArr = item.split("" + usrConfig.static_path);
      oldPath = "" + usrConfig.static_path + itemArr[1];
      fNum = itemArr[1].lastIndexOf('/');
      folder = itemArr[1].substring(0, fNum);
      fileType = path.extname(item);
      fileBaseName = path.basename(item);
      newFolders = "" + output + folder;
      fileProcess.mkdirSync(newFolders, function(e) {
        var minCode, newFile;
        if (e) {
          console.log(e);
        } else {
          if (itemArr[1].indexOf(usrConfig.combo_file) === -1) {
            minCode = compress(oldPath, fileType);
            newFile = "" + newFolders + "/" + fileBaseName;
            fileProcess.writeFile(newFile, minCode);
            filesCode[newFile] = minCode;
          }
        }
      });
    });
  };

}).call(this);
